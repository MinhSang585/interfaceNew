<?phpclass Group_model extends CI_Model {	protected $table_players = 'players';	protected $table_groups = 'groups';	protected $table_group_lang = 'group_lang';		public function get_group_data($id = NULL)	{			$result = NULL;				$query = $this				->db				->where('group_id', $id)				->limit(1)				->get($this->table_groups);				if($query->num_rows() > 0)		{			$result = $query->row_array();  		}				$query->free_result();				return $result;	}		public function add_group()	{			$DBdata = array(			'group_name' => $this->input->post('group_name', TRUE),			'group_type' => $this->input->post('group_type', TRUE),			'active' => (($this->input->post('active', TRUE) == STATUS_ACTIVE) ? STATUS_ACTIVE : STATUS_INACTIVE),			'created_by' => $this->session->userdata('username'),			'created_date' => time()		);				$this->db->insert($this->table_groups, $DBdata);				$DBdata['group_id'] = $this->db->insert_id();				return $DBdata;	}		public function update_group($id = NULL)	{			$DBdata = array(			'group_name' => $this->input->post('group_name', TRUE),			'group_type' => $this->input->post('group_type', TRUE),			'active' => (($this->input->post('active', TRUE) == STATUS_ACTIVE) ? STATUS_ACTIVE : STATUS_INACTIVE),			'updated_by' => $this->session->userdata('username'),			'updated_date' => time()		);				$this->db->where('group_id', $id);		$this->db->limit(1);		$this->db->update($this->table_groups, $DBdata);				$DBdata['group_id'] = $id;				return $DBdata;	}		public function delete_group($id = NULL)	{			$this->db->where('group_id', $id);		$this->db->limit(1);		$this->db->delete($this->table_groups);	}		public function get_group_list($type = NULL)	{			$result = NULL;				$query = $this				->db				->select('group_id, group_name')				->where('group_type', $type)				//->where('active', STATUS_ACTIVE)				->get($this->table_groups);				if($query->num_rows() > 0)		{			$result = $query->result_array();			}				$query->free_result();				return $result;	}		public function get_group_name($type = NULL)	{			$result = NULL;				$query = $this				->db				->select('group_id, group_name')				->where('group_type', $type)				->where('active', STATUS_ACTIVE)				->get($this->table_groups);				if($query->num_rows() > 0)		{			foreach($query->result() as $row)			{				$result[$row->group_id] = $row->group_name;			}			}				$query->free_result();				return $result;	}		public function get_group_lang_data($id = NULL)	{			$result = NULL;				$query = $this				->db				->select('group_name, language_id')				->where('group_id', $id)				->get($this->table_group_lang);				if($query->num_rows() > 0)		{			foreach($query->result() as $row)			{				$result[$row->language_id] = $row->group_name;			}			}				$query->free_result();				return $result;	}		public function add_group_lang($id = NULL, $group_name = NULL, $language_id = NULL)	{		$DBdata = array(			'group_name' => $group_name,			'group_id' => $id,			'language_id' => $language_id		);				$this->db->insert($this->table_group_lang, $DBdata);	}		public function delete_group_lang($id = NULL)	{			$this->db->where('group_id', $id);		$this->db->delete($this->table_group_lang);	}	public function count_group_bank_total($id = NULL){		$result = NULL;		$this->db->like('bank_group_id', ','.$id.',');		$result = $this->db->count_all_results($this->table_players);		return $result;	}	public function count_group_profile_total($id = NULL){		$result = NULL;		$this->db->where('profile_group_id', $id);		$result = $this->db->count_all_results($this->table_players);		return $result;	}}